events {}

http {
    upstream auth_api { # defines the server of the authentification API
        server auth_api:8000;
    }

    upstream place_api { # defines the server of the main API
        server place_api:8000;
    }

    map $http_upgrade $connection_upgrade { # map to adapt the headers for websockets
        default upgrade;
        '' close;
    }

    map $http_referer $docs_api {
        ~*auth-docs  http://auth_api;
        ~*place-docs http://place_api;
        default       http://place_api;
    }

    server {
        listen  80; # listen on port 80

        location = /auth-docs {
            proxy_pass http://auth_api/docs; # line to proxy to the auth_api's /docs endpoint
            proxy_set_header Host $host; # sets the proxied request's Host header to the value of the client request's Host header
            proxy_set_header X-Real-IP $remote_addr; # same as above, but for the X-Real-IP header
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # same for X-Forwarded-For header
            proxy_set_header X-Forwarded-Proto $scheme; # same for X-Forwarded-Proto header (http or https type)
        }

        location = /place-docs {
            proxy_pass http://place_api/docs; # line to proxy to the place_api's /docs endpoint
            proxy_set_header Host $host; # sets the proxied request's Host header to the value of the client request's Host header
            proxy_set_header X-Real-IP $remote_addr; # same as above, but for the X-Real-IP header
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # same for X-Forwarded-For header
            proxy_set_header X-Forwarded-Proto $scheme; # same for X-Forwarded-Proto header (http or https type)
        }

        location ~* ^/openapi\.json$ {
            proxy_pass $docs_api/openapi.json;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /auth/ {
            proxy_pass http://auth_api; # line to proxy to the "auth_api" upstream server defined above
            proxy_set_header Host $host; # sets the proxied request's Host header to the value of the client request's Host header
            proxy_set_header X-Real-IP $remote_addr; # same as above, but for the X-Real-IP header
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # same for X-Forwarded-For header
            proxy_set_header X-Forwarded-Proto $scheme; # same for X-Forwarded-Proto header (http or https type)
            proxy_set_header Upgrade $http_upgrade; # same for Upgrade header, useful for websockets
            proxy_set_header Connection $connection_upgrade; # same for Connection header, for websockets too
        }

        location / {
            proxy_pass http://place_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }
    }
}
